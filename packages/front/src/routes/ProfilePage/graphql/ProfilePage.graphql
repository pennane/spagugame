fragment ProfilePageUserStats on UserStats {
  _id
  userId
  gameType
  totalWins
  totalPlayed
  elo
}

fragment ProfilePageUserAchievement on Achievement {
  _id
  name
  description
  criteria {
    ... on OtherUnlockCriteria {
      gameType
    }
    ... on TotalWinsUnlockCriteria {
      gameType
      wins
    }
    ... on WinStreakUnlockCriteria {
      gameType
      streak
    }
    ... on TotalPlayedUnlockCriteria {
      gameType
      played
    }
    ... on LeaderboardRankUnlockCriteria {
      gameType
      rank
    }
  }
}

fragment ProfilePageUserPlayedGame on PlayedGame {
  _id
  gameType
  players {
    ...PlayedGamePlayer
  }
  playerScores
  playerElosBefore
  playerElosAfter
  startedAt
  finishedAt
  finalState
  ongoingGameId
}

fragment UserFollowing on User {
  followers {
    _id
    userName
    profilePicture {
      url
    }
    githubId
  }
  following {
    _id
    userName
    profilePicture {
      url
    }
    githubId
  }
}

fragment ProfilePicture on Image {
  id
  hash
  url
}

fragment ProfilePageUser on User {
  _id
  githubId
  userName
  profilePicture {
    ...ProfilePicture
  }
  stats {
    ...ProfilePageUserStats
  }
  playedGames {
    ...ProfilePageUserPlayedGame
  }
  achievements {
    ...ProfilePageUserAchievement
  }
  ...UserFollowing
}

query ProfilePageUser($userId: ID!) {
  user(id: $userId) {
    ...ProfilePageUser
  }
}

mutation FollowUser($userId: ID!, $toggle: Boolean!) {
  toggleFollow(userId: $userId, toggle: $toggle) {
    _id
    ...UserFollowing
  }
}

mutation UploadProfileImage($file: Upload!) {
  uploadProfilePicture(file: $file) {
    _id
    profilePicture {
      ...ProfilePicture
    }
  }
}
